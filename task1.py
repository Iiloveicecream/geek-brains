""""1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
 Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль."""


def task1(n, m):
    try:
        print(n/m)
    except ZeroDivisionError as e:
        print(e)


"""2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Реализовать вывод данных о пользователе одной строкой."""


def task2(
          name, surname, birthday,
          city_of_residence, email,
          phone_number):
    print("Name: " + name, "Surname: " + surname,
          "birthday: " + birthday,
          "city_of_residence: " + city_of_residence,
          "email: " + email, "phone_number: " + phone_number
          )


"""3. Реализовать функцию my_func(),
которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов."""


def task3(n, k, m):
    print(n + k + m - min(n, k, m))


"""4.Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y.
Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

Подсказка: попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **,
предусматривающая использование цикла.
"""


def task4(x, y):
    y = abs(y)
    temp = x
    for i in range(1, y):
        x = x * temp
    print(1 / x)


"""5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел,
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу."""


def task5():
    input_bool = True
    sum_ = 0
    while input_bool:
        input_numbers = input('Special symbol - "$"\n'
                              'Input numbers: ').split()
        for i in input_numbers:
            if i != '$':
                sum_ = sum_ + int(i)
            else:
                input_bool = False
                break
        print('Sum = ', sum_)


"""6. Реализовать функцию int_func(),
принимающую слово из маленьких латинских букв и возвращающую его же,
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.

Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
Каждое слово состоит из латинских букв в нижнем регистре.
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func()."""


def task6(word):
    word = word[0].upper() + word[1:]
    return word


def task6_mod(many_words):
    many_words = many_words.split()
    for i in range(0, len(many_words)):
        many_words[i] = task6(many_words[i])
    return many_words


if __name__ == '__main__':
    task1(4, 0) 
    task2(
        name=input("Input name: "), surname=input("Input surname: "),
        birthday=input("Input birthday: "),
        city_of_residense=input("Input city of residence"),
        email=input("Input email"), phone_number="Input phone: "
          )
    task3()
    task4()
    task5()
    print(task6_mod(input()))
